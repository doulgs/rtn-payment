/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleH.js
 */

#pragma once

#include <ReactCommon/TurboModule.h>
#include <react/bridging/Bridging.h>

namespace facebook {
namespace react {


  class JSI_EXPORT NativeCxxSpecJSI : public TurboModule {
protected:
  NativeCxxSpecJSI(std::shared_ptr<CallInvoker> jsInvoker);

public:
  virtual void startPayment(jsi::Runtime &rt, jsi::String amount, jsi::String transactionType, jsi::String installmentType, jsi::String installmentCount, jsi::String orderId, jsi::String editableAmount, jsi::String returnScheme) = 0;

};

template <typename T>
class JSI_EXPORT NativeCxxSpec : public TurboModule {
public:
  jsi::Value get(jsi::Runtime &rt, const jsi::PropNameID &propName) override {
    return delegate_.get(rt, propName);
  }

  static constexpr std::string_view kModuleName = "RTNPayment";

protected:
  NativeCxxSpec(std::shared_ptr<CallInvoker> jsInvoker)
    : TurboModule(std::string{NativeCxxSpec::kModuleName}, jsInvoker),
      delegate_(static_cast<T*>(this), jsInvoker) {}

private:
  class Delegate : public NativeCxxSpecJSI {
  public:
    Delegate(T *instance, std::shared_ptr<CallInvoker> jsInvoker) :
      NativeCxxSpecJSI(std::move(jsInvoker)), instance_(instance) {}

    void startPayment(jsi::Runtime &rt, jsi::String amount, jsi::String transactionType, jsi::String installmentType, jsi::String installmentCount, jsi::String orderId, jsi::String editableAmount, jsi::String returnScheme) override {
      static_assert(
          bridging::getParameterCount(&T::startPayment) == 8,
          "Expected startPayment(...) to have 8 parameters");

      return bridging::callFromJs<void>(
          rt, &T::startPayment, jsInvoker_, instance_, std::move(amount), std::move(transactionType), std::move(installmentType), std::move(installmentCount), std::move(orderId), std::move(editableAmount), std::move(returnScheme));
    }

  private:
    T *instance_;
  };

  Delegate delegate_;
};

} // namespace react
} // namespace facebook
